// Customization based on: http://ckrack.github.com/fbootstrapp/
// Prasad

// variables.less

// form borders
@formBorderRadius:  0px;
@btnBorderRadius:   0px;
@formBorderColor:   @blueLight;

// alert/block-alert borders
@alertBorderRadius: 0px;

// pills/tabs borders
@pillsBorderRadius: 15px;
@tabsBorderRadius:  2px;

// mixins.less
#font {
.facebook(@weight: normal, @size: 11px, @lineHeight: 14px) {
    font-family: "lucida grande", tahoma, verdana, arial, sans-serif;
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
}

// scaffolding.less
body {
	#font > .facebook(normal,@baseFontSize,@baseLineHeight);
}

// tables.less
.table-striped {
	tbody {
		tr:hover td,
		tr:hover th {
			background-color: @grayWhite;
		}		
	}
}

// type.less
h1, h2, h3, h4, h5, h6 {
  font-weight: normal;

  small {
    &.block {
        display: block;
    }
  }
  &.tab {
    border-bottom: 1px solid @grayLighter;
    border-top: 1px solid @grayLighter;
    margin-bottom: 8px;
    padding: 3px 6px;
    background: @grayWhite;
    font-weight: bold;
    a {
        font-weight: normal;
        color: @blue;
    }
  }
}

h1 {
  margin-bottom: @baseLineHeight;
  font-size: 24px;
  line-height: @baseLineHeight * 2;
  small {
    font-size: 16px;
  }
}

h2 {
  font-size: 20px;
  letter-spacing: -0.03em;
  line-height: @baseLineHeight * 2;
  small {
    font-size: 14px;
  }
}

h3, h4, h5, h6 {
  line-height: @baseLineHeight * 2;
}

h3 {
  font-size: 15px;
  font-weight: bold;
  small {
    font-size: 13px;
  }
}

h4 {
  font-size: 15px;
  small {
    font-size: 12px;
  }
}

h5 {
  font-size: 14px;
}

h6 {
  font-size: 13px;
  color: @grayLight;
  text-transform: uppercase;
}

code {
  color: @green;
}

pre {
  background-color: @grayWhite;
}

// forms.less
label,
input,
select,
textarea {
  #font > .facebook();
}

label {
	font-weight: bold;
	color: @gray;
}

input,
textarea,
select,
.uneditable-input {
	border: 1px solid @formBorderColor;
  	.border-radius(@formBorderRadius);
}

select {
	padding: 2px;
}

form .clearfix.error {
  .formFieldState(@red, @red, @redLight);
}

// Warning
form .clearfix.warning {
  .formFieldState(@yellow, @yellow, @yellowLight);
}
// Success
form .clearfix.success {
  .formFieldState(@green, @green, @green);
}

// Grid style input sizes
// This is a duplication of the main grid .columns() mixin, but subtracts 10px to account for input padding and border
.formColumns(@columnSpan: 1) {
  display: inline-block;
  float: none;
  width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 10;
  margin-left: 0;
}

input,
textarea {
  // Default columns
  &.span1     { .formColumns(1); }
  &.span2     { .formColumns(2); }
  &.span3     { .formColumns(3); }
  &.span4     { .formColumns(4); }
  &.span5     { .formColumns(5); }
  &.span6     { .formColumns(6); }
  &.span7     { .formColumns(7); }
  &.span8     { .formColumns(8); }
  &.span9     { .formColumns(9); }
  &.span10    { .formColumns(10); }
  &.span11    { .formColumns(11); }
  &.span12    { .formColumns(12); }
  &.span13    { .formColumns(13); }
  &.span14    { .formColumns(14); }
  &.span15    { .formColumns(15); }
  &.span16    { .formColumns(16); }
}

// Form element sizes
// TODO v2: remove duplication here and just stick to .input-[size] in light of adding .spanN sizes
.input-mini,
input.mini,
textarea.mini,
select.mini {
 .formColumns(1);
}
.input-small,
input.small,
textarea.small,
select.small {
  .formColumns(2);
}
.input-medium,
input.medium,
textarea.medium,
select.medium {
  .formColumns(3);
}
.input-large,
input.large,
textarea.large,
select.large {
  .formColumns(4);
}
.input-xlarge,
input.xlarge,
textarea.xlarge,
select.xlarge {
  .formColumns(6);
}
.input-xxlarge,
input.xxlarge,
textarea.xxlarge,
select.xxlarge {
  .formColumns(8);
}

// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  background-color: @grayWhite;
 }

 // Actions (the buttons)
.actions {
  background: @grayWhite;
  .border-radius(0 0 @formBorderRadius @formBorderRadius);
}

// Allow us to put symbols and text within the input field for a cleaner look
.input-prepend,
.input-append {
  input {
    .border-radius(0 @formBorderRadius @formBorderRadius 0);
  }
  .add-on {
    background: @grayWhite;
    border: 1px solid @formBorderColor;
    height: @baseLineHeight;
    .border-radius(@formBorderRadius 0 0 @formBorderRadius);
  }
}

.input-append {
  input {
    .border-radius(@formBorderRadius 0 0 @formBorderRadius);
  }
  .add-on {
    .border-radius(0 @formBorderRadius @formBorderRadius 0);
  }
 }

// Stacked options for forms (radio buttons or checkboxes)
.inputs-list {
	label {
		line-height: @baseLineHeight+4;
		font-weight: normal;
		strong {
	      color: @grayDark;
	    }
	}
}

// patterns.less
.nav {
  margin: 4px 10px 0 0;
  > li > a {
    font-size: @baseFontSize;
    padding: 6px 10px 11px;
    &:hover {
      color: @white;
      text-shadow: none;
      background-color: @blue !important;
    }
  }
  .active > a {
    background-color: @blue !important;
  }

  a.menu:hover, 
  li.open .dropdown-menu {
    background: @blueDark;
  }

  .dropdown-menu {
    background-color: @blueDark;
    .dropdown-toggle {
      &.open {
        background: @blue;
      }
    }
    li a {
      color: @white;
      text-shadow: none;      
    }
    .divider {
      background-color: @blueDark;
      border-color: @blue;
    }
  }
} 

.nav-tabs {
  > li {
    > a {
      line-height: (@baseLineHeight * 1.5);
      .border-radius(@tabsBorderRadius @tabsBorderRadius 0 0);
    }
  }
}

.nav-pills {
  a {
    margin: 3px 3px 3px 0;
    padding: 0 10px;
    line-height: 20px;
    .border-radius(@pillsBorderRadius);
  }
}

.navbar, .navbar-inverse {
  
  .nav > li {
    > a {
      color: @white;
    }

    .dropdown-menu {
      border-color: @blue;
      border-top-width: 0px;
      &::before,
      &::after {
        display: none;
      }
    }

    &.dropdown {
      &.open {
        > .dropdown-toggle {
          background: @blueDark;
        }        
      }
    }
  }

  .navbar-inner {
    background: @blueDark;
  }

  .brand {
    color: @white;
    padding: 4px 20px 12px;
    margin: 4px 0 0 -20px;
    line-height: 1;

    &:hover {
      background-color: @blue;
    }
  }
  p {
    line-height: 38px;
  }
}

.nav-header {
  text-shadow: none;
}

.dropdown-menu {
  border-width: 1px 1px 1px;

  li > a {
    line-height: 19px;
    color: @blue;
    &:hover,
    &.hover {
      background-color: @blue;
      background-image: none;
      color: @white;
    }
  }
}

.dropdown.open {
  .dropdown-toggle {
    background: @blue;
  }
}

.breadcrumb {
  border: 1px solid #ddd;
  #gradient > .vertical(#ffffff, @grayWhite);
  .divider {
    padding: 0 2px;
  }
}

.hero-unit {
  background-color: @grayWhite;
}


.btn,
.alert {
  // Set text color
  &-success,
  &-success:hover,
  &-danger,
  &-danger:hover,
  &-error,
  &-error:hover,
  &-info,
  &-info:hover {
    color: @grayDark;
  }
  // Sets the close button to the middle of message
  .close{
    line-height: @baseLineHeight;
  }
  // Danger and error appear as red
  &-danger,
  &-error {
    .gradientBar(@redLight, @redLight);
  }
  // Success (now blue, only for alert-message)
  &-success {
    .gradientBar(@blueLighter, @blueLighter);
    border-color: @blueLight;
  }
  // Info (now yellow)
  &-info {
    .gradientBar(@yellowLight, @yellowLight);
  }
}

.btn {
  padding: 5px 12px 6px;
  text-shadow: none;
  font-weight: bold;
  line-height: @baseLineHeight;
  border: 1px solid @gray;
  border-bottom-color: @grayLight;
  .border-radius(@btnBorderRadius);

  // Success (green, only for btn)
  &-success {
    .gradientBar(@greenLight, @greenLight);
    border-color: @green @green @greenDark;
  }  

  // danger & error red (only btn)
  &-danger,
  &-error {
    .gradientBar(@red, @red);
    border-color: darken(@red, 5%) darken(@red, 5%) darken(@red, 20%);
  }
  
  &-success,
  &-danger,
  &-error {
    color: @white;
    &:hover {
        color: @white;
    }
  }

  &.active,
  &:active {
    @shadow: inset 0 2px 4px rgba(0,0,0,.25), 0 1px 2px rgba(0,0,0,.05);
    .box-shadow(@shadow);
  }

  &-primary {
    color: @white;
    .gradientBar(@blue, @blueDark);
    &:hover {
      color: @white;
      background-color: @blueDark;
    }
  }

  // Success (green, only for btn)
  &-success {
    .gradientBar(@greenLight, @greenLight);
    border-color: @green @green @greenDark;
  }
  // danger & error red (only btn)
  &-danger,
  &-error {
    .gradientBar(@red, @red);
    border-color: darken(@red, 5%) darken(@red, 5%) darken(@red, 20%);
  }
  &-success,
  &-danger,
  &-error {
    color: @white;
    &:hover {
        color: @white;
    }
  }

  &-disabled {
    box-shadow: none;
  }
  &-large {
    font-size: @baseFontSize + 2px;
    .border-radius(@btnBorderRadius);
  }
  &-small {
    padding: 4px 7px 5px 7px;
  }

  
}

.alert {
  color: @grayDark !important;

  .gradientBar(#f7f7f7, #f7f7f7);
  text-shadow: none;
  .border-radius(@alertBorderRadius);

  a {
    text-shadow: none;
  }
  strong {
    text-shadow: none;
  }
  &-error,
  &-success,
  &-info {
      text-shadow: none;
  }

  &-block {
    background-color: #f7f7f7;
    border-color: #cccccc;

    &-error {
      background-color: @redLight;
      border-color: @red;
    }
    &-success {
      background-color: @blueLighter;
      border-color: @blueLight;
    }
    &-info {
      background-color: @yellowLight;
      border-color: @yellow;
    }
  }
}

.pagination {
  a:hover, .active a {
    background-color: @blueLighter;
  }
}

.well {
  background-color: @grayWhite;
}

.modal {
  .border-radius(8px);
  .box-shadow(0 0 0px 8px rgba(82, 82, 82, 0.7));
}

.modal-footer {
  background-color: @grayWhite;
}


// TODO port POPOVER and TWIPSY

.label {
  padding: 1px 3px 1px;
  font-size: @baseFontSize * .75;
  text-transform: uppercase;
}

.label, .badge {
  text-shadow: none;
  &-important { background-color: @red; }
  &-warning   { background-color: @yellow; }
  &-success   { background-color: @green; }
  &-info      { background-color: lighten(@blue, 25%); }
  &-notice    { background-color: lighten(@blue, 25%); }
  &-num       { color: @blueDark; background-color: lighten(@blue, 25%); float: right; }
}
